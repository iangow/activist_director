\Sexpr{set_parent('../activist_directors.Rnw')}
\Sexpr{opts_chunk$set(cache=TRUE, warning=FALSE, echo=FALSE, message=FALSE)}

<<outs_x_load_libraries, cache=FALSE, include=FALSE>>=
# Yihui Xie recommends _not_ caching the loading of packages used
# by several chunks.
library(stargazer)
library(DBI)
library(dplyr)
@

<<outs_x_div_acq_data>>=
db <- dbConnect(duckdb::duckdb())

# Get data from activist director tables ----
activism_events <- tbl(db, "read_parquet('../data/activism_events.parquet')")
activist_directors <- tbl(db, "read_parquet('../data/activist_directors.parquet')")
outcome_controls <- tbl(db, "read_parquet('../data/outcome_controls.parquet')")
activist_demands <- tbl(db, "read_parquet('../data/demands.parquet')")
delisting <- tbl(db, "read_parquet('../data/delisting.parquet')")
spinoff_linked <- tbl(db, "read_parquet('../data/spinoff_linked.parquet')")
divestiture_linked <- tbl(db, "read_parquet('../data/divestiture_linked.parquet')")
acquisition_linked <- tbl(db, "read_parquet('../data/acquisition_linked.parquet')")

outcome_controls_mod <-
    outcome_controls %>%
    mutate(default_p2 = if_else(firm_exists_p2, FALSE, NA),
           default_p3 = if_else(firm_exists_p3, FALSE, NA),
           default_num_p2 = if_else(firm_exists_p2, 0L, NA),
           default_num_p3 = if_else(firm_exists_p3, 0L, NA),
           datadate_p2 = sql("datadate + interval '2 years'"),
           datadate_p3 = sql("datadate + interval '3 years'")) %>%
    select(permno, matches("^(datadate|default_|firm_exists_)"))

appointment_dates <-
    activist_directors %>%
    select(campaign_id, appointment_date)  %>%
    inner_join(activism_events, by = "campaign_id") %>%
    group_by(campaign_ids, eff_announce_date) %>%
    summarize(appointment_date = min(appointment_date, na.rm = TRUE),
              .groups = "drop") %>%
    inner_join(outcome_controls, by = c("campaign_ids", "eff_announce_date")) %>%
    select(campaign_ids, eff_announce_date, appointment_date, permno) %>%
    compute()

firm_years <-
    outcome_controls %>%
    select(permno, datadate, fyear)

appointment_cases <-
    firm_years %>%
    left_join(appointment_dates) %>%
    filter(between(appointment_date, sql("datadate - interval '364 days'"), datadate)) %>%
    select(permno, datadate, fyear, appointment_date, campaign_ids)

announcement_cases <-
    firm_years %>%
    left_join(appointment_dates) %>%
    filter(between(eff_announce_date, sql("datadate - interval '364 days'"), datadate)) %>%
    select(permno, datadate, fyear, eff_announce_date, appointment_date)

# Merger cases
announcement_cases %>%
    left_join(delisting, by = "permno") %>%
    mutate(pre_merger_p2 = merger && between(dlstdt, eff_announce_date, sql("appointment_date - interval '2 days'")),
           post_merger_p2 = merger && between(dlstdt, appointment_date, sql("eff_announce_date + interval '2 years'")),
           pre_merger_p3 = merger && between(dlstdt, eff_announce_date, sql("appointment_date - interval '2 days'")),
           post_merger_p3 = merger && between(dlstdt, appointment_date, sql("eff_announce_date + interval '3 years'"))) %>%
    group_by(permno, datadate) %>%
    summarize(pre_merger_p2 = bool_or(pre_merger_p2),
              post_merger_p2 = bool_or(post_merger_p2),
              pre_merger_p3 = bool_or(pre_merger_p3),
              post_merger_p3 = bool_or(post_merger_p3),
              .groups = "drop") %>%
    summarize(across(matches("^(pre|post)_"), ~ sum(as.integer(.))))

# Spinoff cases
announcement_cases %>%
    left_join(spinoff_linked, by = "permno") %>%
    mutate(spinoff_p2 = between(announcedate, eff_announce_date, sql("eff_announce_date + interval '2 years'")),
           spinoff_p3 = between(announcedate, eff_announce_date, sql("eff_announce_date + interval '3 years'")),
           pre_spinoff_p2 = between(announcedate, eff_announce_date, sql("appointment_date - interval '2 days'")),
           post_spinoff_p2 = between(announcedate, appointment_date, sql("eff_announce_date + interval '2 years'")),
           pre_spinoff_p3 = between(announcedate, eff_announce_date, sql("appointment_date - interval '2 days'")),
           post_spinoff_p3 = between(announcedate, appointment_date, sql("eff_announce_date + interval '3 years'"))) %>%
    group_by(permno, datadate) %>%
    summarize(spinoff_p2 = bool_or(spinoff_p2),
              pre_spinoff_p2 = bool_or(pre_spinoff_p2),
              post_spinoff_p2 = bool_or(post_spinoff_p2),
              spinoff_p3 = bool_or(spinoff_p3),
              pre_spinoff_p3 = bool_or(pre_spinoff_p3),
              post_spinoff_p3 = bool_or(post_spinoff_p3),
              .groups = "drop") %>%
    summarize(across(matches("^(pre|post|spinoff)_"), ~ sum(as.integer(.))))

# Divestiture cases
announcement_cases %>%
    left_join(divestiture_linked, by = "permno") %>%
    mutate(divest_p2 = between(announcedate, eff_announce_date, sql("eff_announce_date + interval '2 years'")),
           divest_p3 = between(announcedate, eff_announce_date, sql("eff_announce_date + interval '3 years'")),
           pre_divest_p2 = between(announcedate, eff_announce_date, sql("appointment_date - interval '2 days'")),
           post_divest_p2 = between(announcedate, appointment_date, sql("eff_announce_date + interval '2 years'")),
           pre_divest_p3 = between(announcedate, eff_announce_date, sql("appointment_date - interval '2 days'")),
           post_divest_p3 = between(announcedate, appointment_date, sql("eff_announce_date + interval '3 years'"))) %>%
    group_by(permno, datadate) %>%
    summarize(divest_p2 = bool_or(divest_p2),
              pre_divest_p2 = bool_or(pre_divest_p2),
              post_divest_p2 = bool_or(post_divest_p2),
              divest_p3 = bool_or(divest_p3),
              pre_divest_p3 = bool_or(pre_divest_p3),
              post_divest_p3 = bool_or(post_divest_p3),
              .groups = "drop") %>%
    summarize(across(matches("^(pre|post|divest)_"), ~ sum(as.integer(.))))

# Acquisition cases
announcement_cases %>%
    left_join(acquisition_linked, by = "permno") %>%
    mutate(acq_p2 = between(announcedate, eff_announce_date, sql("eff_announce_date + interval '2 years'")),
           acq_p3 = between(announcedate, eff_announce_date, sql("eff_announce_date + interval '3 years'")),
           pre_acq_p2 = between(announcedate, eff_announce_date, sql("appointment_date - interval '2 days'")),
           post_acq_p2 = between(announcedate, appointment_date, sql("eff_announce_date + interval '2 years'")),
           pre_acq_p3 = between(announcedate, eff_announce_date, sql("appointment_date - interval '2 days'")),
           post_acq_p3 = between(announcedate, appointment_date, sql("eff_announce_date + interval '3 years'"))) %>%
    group_by(permno, datadate) %>%
    summarize(acq_p2 = bool_or(acq_p2),
              pre_acq_p2 = bool_or(pre_acq_p2),
              post_acq_p2 = bool_or(post_acq_p2),
              acq_p3 = bool_or(acq_p3),
              pre_acq_p3 = bool_or(pre_acq_p3),
              post_acq_p3 = bool_or(post_acq_p3),
              .groups = "drop") %>%
    summarize(across(matches("^(pre|post|acq)_"), ~ sum(as.integer(.)))) %>%
    collect()

rs <- dbDisconnect(db, shutdown = TRUE)
@
