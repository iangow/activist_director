\Sexpr{set_parent('../activist_directors.Rnw')}
\Sexpr{opts_chunk$set(cache=TRUE, warning=FALSE, echo=FALSE, message=FALSE)}

<<dir_desc_libraries, cache=FALSE, include=FALSE>>=
library(xtable)
library(DBI)
library(dplyr, warn.conflicts = FALSE)
library(survival)
library(quantreg)
library(zoo)
@

\begin{landscape}
<<dir_desc_sample, message=FALSE, echo=FALSE, results='asis'>>=
# PostgreSQL connection #
pg <- dbConnect(RPostgres::Postgres(), bigint = "integer")
rs <- dbExecute(pg, "SET search_path TO activist_director")

activist_directors <- tbl(pg, "activist_directors")
activism_events <- tbl(pg, "activism_events")
equilar_w_activism <- tbl(pg, "equilar_w_activism")
ind_exp <- tbl(pg, "ind_exp") %>% collect()
equilar_final <- tbl(pg, "equilar_final")

censor_date <- "2017-12-31"

# All Director Sample
activist_dir_data <-
    activism_events %>%
    mutate(campaign_id = unnest(campaign_ids)) %>%
    group_by(campaign_id) %>%
    summarize(elected = bool_or(elected)) %>%
    inner_join(activist_directors, by = "campaign_id") %>%
    filter(!is.na(independent) & !is.na(permno) & !is.na(appointment_date)) %>%
    mutate(still_active = as.integer(is.na(retirement_date)),
           left_board  = as.integer(!is.na(retirement_date)),
           tenure = retirement_date - appointment_date,
           exit = retirement_date > censor_date | is.na(retirement_date),
           retirement_date = coalesce(retirement_date, censor_date),
           tenure_censored = retirement_date - appointment_date) %>%
    mutate(activist_affiliate = !independent) %>%
    compute()

surv_data <-
    activist_dir_data %>%
    select(appointment_date, retirement_date, exit, activist_affiliate) %>%
    collect()

surv_est <-
    with(surv_data, Surv(as.numeric(retirement_date - appointment_date), exit, type='right'))


quantreg1 <- crq(surv_est ~ activist_affiliate,
                 taus=c(0.25, 0.5, 0.75),
                 data=surv_data,
                 na.action="na.omit",
                 method="Portnoy")

summary1 <- summary.crq(quantreg1, taus=c(0.25, 0.5, 0.75))

activist_director_stats <-
    activist_dir_data %>%
    collect() %>%
    mutate(left_board = if_else(left_board==1L, 1, NA_real_),
           still_active = if_else(still_active==1L, 1, NA_real_)) %>%
    group_by(activist_affiliate) %>%
    summarize(num_all = n(),
              num_left_board  = sum(left_board, na.rm = TRUE),
              left_tenure = median(tenure_censored*left_board, na.rm = TRUE),
              num_still_active = sum(still_active, na.rm = TRUE),
              active_tenure = median(tenure_censored*still_active, na.rm = TRUE))

names(activist_director_stats) <- c("Category", "N", "Left board", "Tenure",
                                    "Still active", "Tenure")
activist_director_stats <-cbind(activist_director_stats,
          tibble(`Tenure (adjusted)`=cumsum(summary1[[1]]$coefficients[,1])))
activist_director_stats[,1] <- c("Unffiliated directors","Affiliated directors")

all.dir.data <-
    equilar_w_activism %>%
    filter(!is.na(age)) %>%
    mutate(activist_director = if_else(activist_director, 'Activist director', NA),
           all_directors = as.character("All directors")) %>%
    select(executive_id, company_id, all_directors, activist_director, age, female,
           any_committee, comp_committee, audit_committee,
           audit_committee_financial_expert) %>%
    collect()

act.dir.data <-
    equilar_w_activism %>%
    filter(!is.na(age),
           activist_director) %>%
    mutate(affiliated_director = if_else(affiliated_director,
                                         'Affiliated director', 'Unaffiliated directors'),
           activist_director = as.character("Activist directors")) %>%
    select(executive_id, company_id, activist_director, affiliated_director, age, female,
           any_committee, comp_committee, audit_committee,
           audit_committee_financial_expert) %>%
    collect()

# New Director Sample
new.dir.data <-
    equilar_w_activism %>%
    filter(!is.na(age),
           new_director) %>%
    mutate(new_directors = as.character("New directors")) %>%
    select(new_directors, everything()) %>%
    mutate(category = if_else(category == "activist_demand_firm",
                              "activism_firm", category)) %>%
    collect()

new.dir.data$category <- as.factor(new.dir.data$category)
levels(new.dir.data$category) <- c("New directors: No activism",
                                   "New directors: Other activism",
                                   "New directors: Activist director")

# Additional Variables
board_experience <-
    equilar_final %>%
    select(executive_id, company_id, date_start) %>%
    distinct()

board_exp_by_period <-
    equilar_final %>%
    select(executive_id, company_id, period) %>%
    left_join(board_experience, by = "executive_id") %>%
    filter(date_start < period, company_id.x != company_id.y) %>%
    mutate(company_id=company_id.x) %>%
    select(-company_id.x, -company_id.y) %>% distinct() %>%
    group_by(executive_id, company_id, period) %>%
    summarise(board_exp=count(date_start), .groups = "drop") %>%
    arrange(executive_id, company_id, period) %>%
    collect()

tenure_experience <-
    equilar_final %>%
    select(executive_id, company_id, date_start, company_director_max_term) %>%
    arrange(executive_id, date_start) %>%
    distinct()

tenure_exp_by_period <-
    equilar_final %>%
        select(executive_id, company_id, period) %>%
        left_join(tenure_experience, by="executive_id") %>%
        filter(date_start < period, company_id.x!=company_id.y) %>%
        mutate(company_id = company_id.x,
               tenure = pmax(0, pmin(period,
                                     company_director_max_term, na.rm=TRUE) -
                               date_start, na.rm=TRUE)) %>%
        select(-company_id.x, -company_id.y) %>%
        distinct() %>%
        group_by(executive_id, company_id, period) %>%
        summarise(board_exp=count(tenure),
                  avg_tenure=mean(tenure)/365.25,
                  sum_tenure=sum(tenure, na.rm=TRUE)/365.25,
                  .groups = "drop") %>%
        arrange(executive_id, period) %>%
        distinct() %>%
        collect()

# Board Experience
tenure_experience <- equilar_final %>%
    select(executive_id, company_id, date_start, company_director_max_term) %>%
    arrange(executive_id, date_start) %>% distinct()

# Board Experience by Period
tenure_exp_by_period <-
    equilar_final %>%
        select(executive_id, company_id, period) %>%
        left_join(tenure_experience, by="executive_id") %>%
        filter(date_start < period, company_id.x!=company_id.y) %>%
        mutate(company_id = company_id.x,
               tenure = pmax(0, pmin(period,
                                     company_director_max_term, na.rm=TRUE) -
                               date_start, na.rm=TRUE)) %>%
        select(-company_id.x, -company_id.y) %>%
        distinct() %>%
        group_by(executive_id, company_id, period) %>%
        summarise(board_exp=count(tenure),
                  avg_tenure=mean(tenure)/365.25,
                  sum_tenure=sum(tenure, na.rm=TRUE)/365.25) %>%
        arrange(executive_id, period) %>%
        distinct() %>%
        collect()

# Earliest Board Experience by Period
board_experience <-
    tenure_exp_by_period %>%
    group_by(executive_id, company_id) %>%
    mutate(period=min(period)) %>%
    inner_join(tenure_exp_by_period) %>%
    select(-period) %>%
    collect()

rs <- dbDisconnect(pg)
@

<<dir_desc_table, dependson="dir_desc_sample", results='asis'>>=
# All Director Sample - Table
col.names <- unlist(strsplit("Category, N, Age, Female, Comm., Comp comm.,
                             Audit comm., Fin. expert", ",\\s*"))
sum.var.str <- "age female
                any_committee comp_committee audit_committee
                audit_committee_financial_expert"

sum.vars <- unlist(strsplit(sum.var.str, "\\s+"))

getTab <- function(cat, df) {

    means <-
        df %>%
        group_by_at(cat) %>%
        summarize_at(vars(sum.vars), function(x) mean(x, na.rm = TRUE))

    count <-
        df %>%
        group_by_at(cat) %>%
        count()

    df_new <-
        count %>%
        inner_join(means) %>%
        ungroup()

    names(df_new) <- col.names
    df_new
}

all_dir_data <-
    all.dir.data %>%
    left_join(ind_exp, by = c("executive_id", "company_id")) %>%
    left_join(tenure_exp_by_period) %>%
    distinct()

new_dir_data <-
    new.dir.data %>%
    left_join(ind_exp, by = c("executive_id", "company_id")) %>%
    left_join(tenure_exp_by_period) %>%
    distinct()

act_dir_data <-
    act.dir.data %>%
    left_join(ind_exp, by = c("executive_id", "company_id")) %>%
    left_join(board_experience) %>%
    distinct()

tab.1 <- getTab("all_directors", all_dir_data)
# New director sample - table
tab.2 <- getTab("category", new_dir_data) %>%
    mutate(Category = as.character(Category))
tab.3 <- getTab("activist_director.x", act_dir_data)
tab.4 <-
    getTab("affiliated_director.x", act_dir_data) %>%
    arrange(desc(Category))
tab <- bind_rows(tab.1, tab.2, tab.3, tab.4)

# Another Descriptive Table
col.names <- unlist(strsplit("Category, N, Ind exp., Board exp. (firms), Avg. tenure (years), Board exp. (years)", ",\\s*"))
sum.var.str <- "prior_ind_exp board_exp avg_tenure sum_tenure"

sum.vars <- unlist(strsplit(sum.var.str, "\\s+"))

# New director sample - table
#    arrange(desc(Category))
tab2 <- bind_rows(getTab("all_directors", all_dir_data),
                  getTab("category", new_dir_data) %>%
                    mutate(Category = as.character(Category)),
                  getTab("activist_director.x", act_dir_data),
                  getTab("affiliated_director.x", act_dir_data))
@

<<skill_summ, dependson="dir_desc_sample", results='asis'>>=
pg <- dbConnect(RPostgres::Postgres(), bigint = "integer")
rs <- dbExecute(pg, "SET search_path TO activist_director")

activist_director_skills <-
  tbl(pg, "activist_director_skills") %>%
  collect()

rs <- dbDisconnect(pg)

# Director Skillsets
skill_summ_raw <-
    activist_director_skills %>%
    filter(!is.na(independent)) %>%
    select(academic:num_skills) %>%
    summarise(across(everything(), ~ mean(as.integer(.), na.rm=TRUE)))

skill_summ_affiliated <-
  activist_director_skills %>%
  filter(!independent) %>%
  select(academic:num_skills) %>%
  summarise(across(everything(), ~ mean(as.integer(.), na.rm=TRUE)))

skill_summ_unaffiliated <-
  activist_director_skills %>%
  filter(independent) %>%
  select(academic:num_skills) %>%
  summarise(across(everything(), ~ mean(as.integer(.), na.rm=TRUE)))

skill_vars <-
    activist_director_skills %>%
    select(academic:num_skills) %>%
    colnames()

skill_summ_labels <- c("Academic", "Company business", "Compensation",
                       "Entrepreneurial", "Finance and accounting",
                       "Governance", "Government policy", "International",
                       "Leadership", "Legal", "Management", "Manufacturing",
                       "Marketing", "Outside board", "Outside executive",
                       "Risk management", "Scientific", "Strategic planning",
                       "Sustainability", "Technology", "Number of skills")

t_test_fun <- function(df, var) {
  formula <- as.formula(paste(var, "~ independent"))
  t.test(formula, data = df)[3]
}

skill_summ <-
  tibble(Skill = c(skill_summ_labels),
         skill_var = skill_vars,
         `Activist director` = t(skill_summ_raw)[, 1],
         Affiliated = t(skill_summ_affiliated)[, 1],
         Unaffiliated = t(skill_summ_unaffiliated)[, 1]) %>%
  mutate(`Diff.` = Unaffiliated - Affiliated,
         `P-value` = unlist(lapply(c(skill_vars),
                                   function(x) t_test_fun(activist_director_skills, x)))) %>%
  select(-skill_var)

# Adams et al. (2018) data. Source: Table 3 and footnote to Figure 2
# (last number)
adams_data <- tibble(skill_var = skill_vars,
                    `Adams et al. (2018)` = c(0.075, 0.253, 0.082, 0.023, 0.340,
                                              0.201, 0.089, 0.291, 0.287, 0.049,
                                              0.383, 0.088, 0.113, 0.130, 0.234,
                                              0.060, 0.014, 0.199, 0.016, 0.140,
                                              3.07))

t_test_adams <- function(skill) {

  data <-
    activist_director_skills %>%
    select(!!skill) %>%
    pull() %>%
    na.omit()

  adams_avg <-
    adams_data %>%
    filter(skill_var == !!skill) %>%
    pull(2)

  if (skill != "num_skills") {
    binom.test(x = sum(data), n = length(data), p = adams_avg)$p.value
  } else {
    poisson.test(x = sum(data), T = length(data), r = adams_avg)$p.value
  }
}

skill_summ_sim <-
  tibble(Skill = skill_summ_labels,
         skill_var = skill_vars,
         `Activist director` = t(skill_summ_raw)[, 1]) %>%
  inner_join(adams_data, by = "skill_var") %>%
  mutate(`Diff.` = `Activist director` - `Adams et al. (2018)`,
         `P-value` = unlist(lapply(skill_vars, t_test_adams))) %>%
  select(-skill_var)
@

\begin{table}[htb]
  \caption{Director characteristics}
  \label{tbl:dir_chars}
  \begin{minipage}[t]{\columnwidth}
%  \begin{flushleft}
\tabularnewline
{\small
This table presents descriptive statistics for directors.
Panel A presents data on directors matched to Equilar.
$N$ refers to the number of observations.
\textit{Age} refers to mean age of directors in each category.
Values for \textit{Female}, \textit{Comm.}, \textit{Comp comm.}, \textit{Audit comm.}, \textit{Fin. expert} are means of indicator variables for being female, being a member of at least one board committee, being a member of the compensation committee, being a member of the audit committee, and being designated a financial expert of the audit committee, respectively.
Panel A includes all directors, with \textit{Activist directors} relating to activist directors in their first year on their respective boards.
Panel B presents data on all activist directors (i.e., no requirement for Equilar match).
\textit{Tenure} is median tenure in days (censored for directors still active on \Sexpr{format(as.Date(censor_date), "%B %d, %Y")}).
\textit{Tenure (adjusted)} is estimated median tenure for directors accounting for censoring.
\newline}
% \end{flushleft}
\end{minipage}
\begin{tabularx}{\linewidth}{l*{8}{Y}}
\multicolumn{8}{l}{Panel A: Director characteristics by activism classification}
% \hline
\\
<<dir_desc_panel_A, cache=FALSE, results='asis'>>=
# Note that display has to cover rownames as well (I set this to "s")
print(xtable(tab, display=c("s", "s", "d", rep("f", 6))),
      include.rownames=FALSE, only.contents=TRUE,
      format.args = list(big.mark = ","))
@
\\
<<dir_desc_panel_A2, cache=FALSE, results='asis'>>=
# Note that display has to cover rownames as well (I set this to "s")
print(xtable(tab2, display=c("s", "s", "d", rep("f", 4))),
      include.rownames=FALSE, only.contents=TRUE,
      format.args = list(big.mark = ","))
@
\\
\end{tabularx}
\begin{tabularx}{\linewidth}{l*{6}{Y}}
\multicolumn{6}{l}{Panel B: Activist director tenure}
% \hline
\\
<<dir_desc_panel_B, cache=FALSE, results='asis'>>=
# Note that display has to cover rownames as well (I set this to "s")
print(xtable(activist_director_stats, display=c("s", "s", "d", "d", "d", "d", "d", "d")),
      include.rownames=FALSE, only.contents=TRUE,
      format.args = list(big.mark = ","))
@
\end{tabularx}
\addtocounter{table}{-1}
\end{table}
\newpage
\begin{table}[htb]
  \caption{Director characteristics}
  \begin{minipage}[t]{\columnwidth}
%  \begin{flushleft}
\tabularnewline
{\small
This table presents descriptive statistics for directors.
Panel C presents data on activist director skill sets with activist directors in Column 1 and the simulated sample of directors from \citet{Adams:2018vf} in Column 2.
The difference between activist director sample and \citet{Adams:2018vf} sample is reported in Column 3 with its p-value reported in Column 4.
\newline}
% \end{flushleft}
\end{minipage}
\begin{tabularx}{\linewidth}{l*{5}{Y}}
\multicolumn{5}{l}{Panel C: Activist director skill sets: Activist directors}
% \hline
\\
<<dir_desc_panel_C, cache=FALSE, results='asis'>>=
# Note that display has to cover rownames as well (I set this to "s")
print(xtable(skill_summ_sim, display=c("s", "s", "f", "f", "f", "f")),
      include.rownames = FALSE, only.contents = TRUE,
      format.args = list(big.mark = ","))
@
\end{tabularx}
\addtocounter{table}{-1}
\end{table}
\newpage
\begin{table}[htb]
  \caption{Director characteristics}
  \begin{minipage}[t]{\columnwidth}
%  \begin{flushleft}
\tabularnewline
{\small
This table presents descriptive statistics for directors.
Panel D presents data on activist director skill sets with affiliated directors in Column 2 and unaffiliated directors in Column 3.
The difference between affiliated and unaffiliated directors is reported in Column 4 with its p-value reported in Column 5.
\newline}
% \end{flushleft}
\end{minipage}
\begin{tabularx}{\linewidth}{l*{6}{Y}}
\multicolumn{6}{l}{Panel D: Activist director skillsets: Affiliated vs. Unaffiliated}
% \hline
\\
<<dir_desc_panel_D, cache=FALSE, results='asis'>>=
# Note that display has to cover rownames as well (I set this to "s")
print(xtable(skill_summ, display=c("s", "s", "f", "f", "f", "f", "f")),
      include.rownames = FALSE, only.contents = TRUE,
      format.args = list(big.mark = ","))
@
\end{tabularx}
\end{table}
\end{landscape}
