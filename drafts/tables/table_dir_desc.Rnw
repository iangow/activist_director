\Sexpr{set_parent('../activist_directors.Rnw')}
\Sexpr{opts_chunk$set(cache=TRUE, warning=FALSE, echo=FALSE, message=FALSE)}

<<dir_desc_libraries, cache=FALSE, include=FALSE>>=
library(doBy)
library(xtable)
@

\begin{landscape}
<<dir_desc_sample, message=FALSE, echo=FALSE, results='asis'>>=
# PostgreSQL connection #
library(RPostgreSQL)
pg <- dbConnect(PostgreSQL())

# All Director Sample
activist_directors <- dbGetQuery(pg, "
    WITH raw_data AS (
        SELECT DISTINCT a.*,  --activist_affiliate,
            (retirement_date IS NULL)::int AS still_active,
            (retirement_date IS NOT NULL)::int AS left_board,
            (retirement_date-appointment_date)::float8 AS tenure,
            COALESCE(retirement_date, '2016-09-30')-appointment_date AS tenure_censored
       FROM activist_director.activist_directors AS a
       INNER JOIN activist_director.activism_events AS b
       USING (permno, dissident_group, eff_announce_date)
       WHERE appointment_date IS NOT NULL AND permno IS NOT NULL)

    SELECT independent IS FALSE AS activist_affiliate,
        count(*) AS num_all,
        sum(left_board) AS num_left_board,
        sum(tenure_censored*left_board)/sum(left_board)::int AS left_tenure,
        sum(still_active) AS num_still_active,
        sum(tenure_censored*still_active)/sum(still_active)::int AS active_tenure
    FROM raw_data
    GROUP BY activist_affiliate")

names(activist_directors) <- c("Category", "N", "Left board", "Tenure",
                 "Still active", "Tenure")
activist_directors[,1] <- c("Unffiliated directors","Affiliated directors")

all.dir.data <- dbGetQuery(pg, "
    SELECT 'All directors'::text AS all_directors,
        CASE WHEN activist_director THEN 'Activist director' ELSE NULL END AS activist_director,
        audit_committee, comp_committee, nom_committee,
        time_retirement, time_role, time_brd, time_inco,
        tot_nolstd_brd, tot_noun_lstd_brd, tot_curr_nolstd_brd, tot_curr_noun_lstd_brd,
        female, no_quals, age
    FROM activist_director.boardex_w_activism
    WHERE annual_report_date > '2003-12-31'")

act.dir.data <- dbGetQuery(pg, "
    SELECT 'Activist directors'::text AS activist_director,
      CASE WHEN affiliated_director THEN 'Affiliated directors'::text
        ELSE 'Unaffiliated directors' END AS affiliated_director,
        audit_committee, comp_committee, nom_committee,
        time_retirement, time_role, time_brd, time_inco,
        tot_nolstd_brd, tot_noun_lstd_brd, tot_curr_nolstd_brd, tot_curr_noun_lstd_brd,
        female, no_quals, age
    FROM activist_director.boardex_w_activism
    WHERE activist_director
    AND annual_report_date > '2003-12-31'")

# New Director Sample
new.dir.data <- dbGetQuery(pg, "
  SELECT 'New directors'::text AS new_directors, *
  FROM activist_director.boardex_w_activism
  WHERE annual_report_date > '2003-12-31'
  AND director_first_year AND NOT firm_first_year")

new.dir.data$category <- as.factor(new.dir.data$category)
levels(new.dir.data$category) <- c("New directors: No activism",
                                   "New directors: Non-board activism",
                                   "New directors: Board demand",
                                   "New directors: Activist director")
rs <- dbDisconnect(pg)
@

<<dir_desc_table, cache=TRUE, dependson="dir_desc_sample", results='asis'>>=

# All Director Sample - Table
col.names <- unlist(strsplit("Category, N, Audit, Comp, Nom,
                             Listed, Unlisted, Female, Edu, Age", ",\\s*"))

sum.var.str <- "audit_committee comp_committee nom_committee
        tot_curr_nolstd_brd tot_curr_noun_lstd_brd
        female no_quals age"

sum.vars <- unlist(strsplit(sum.var.str, "\\s+"))
sum.model <-  paste(sum.vars, collapse=" + ")

getTab <- function(cat, df) {
     tab.1 <- cbind(
         cat,
         N=aggregate(df$age,
              by=list(df[ , cat]), FUN=length)[,2],
         summaryBy(formula(paste(sum.model, "~", cat )),
              data = df,
              FUN = function(x) { c(mean=mean(x, na.rm=TRUE)) },
              keep.names=TRUE))

    var.order <- unlist(strsplit(paste(cat, "N", sum.var.str), "\\s+"))
    tab.1 <- tab.1[, var.order]
    names(tab.1) <- col.names
    return(tab.1)
}

tab.1 <- getTab("all_directors", all.dir.data)
# New director sample - table
# tab.2 <- getTab("category", new.dir.data)
tab.2 <- getTab("new_directors", new.dir.data)
tab.3 <- getTab("activist_director", act.dir.data)
tab.4 <- getTab("affiliated_director", act.dir.data)
tab <- rbind(tab.1, tab.2, tab.3, tab.4)
@

\begin{table}[htb]
  \caption{Director characteristics}

  \label{tbl:dir_chars}
  \begin{minipage}[t]{\columnwidth}
%  \begin{flushleft}
\tabularnewline
{\small
This table presents descriptive statistics for directors. Panel A presents data on directors matched to boardex. $N$ refers to the number of observations. \textit{Age} refers to mean age of directors in each category. Values for \textit{Female}, \textit{Comm.}, \textit{Comp comm.}, \textit{Audit comm.}, \textit{Fin. expert} are means of indicator variables for being female, being a member of at least one board committee, being a member of the compensation committee, being a member of the audit committee, and being designated a financial expert of the audit committee, respectively. Panel A includes all directors, with \textit{Activist directors} relating to activist directors in their first year on their respective boards. Panel B presents data on all activist directors (i.e., no requirement for boardex match). \textit{Tenure} is measured in days and is censored for directors still active on December 31, 2013.
\newline}
% \end{flushleft}
\end{minipage}
\begin{tabularx}{\linewidth}{l*{9}{Y}}
\multicolumn{9}{l}{Panel A: Director characteristics by activism classification}
% \hline
\\
<<dir_desc_panel_A, dependson="dir_desc_table", results='asis'>>=
# Note that display has to cover rownames as well (I set this to "s")
print(xtable(tab, display=c("s", "s", "d", rep("f", 8))),
      include.rownames=FALSE, only.contents=TRUE,
      format.args = list(big.mark = ","))
@
\\
\end{tabularx}
\begin{tabularx}{\linewidth}{l*{6}{Y}}
\multicolumn{6}{l}{Panel B: Activist director tenure}
% \hline
\\
<<dir_desc_panel_B, dependson="dir_desc_table", results='asis'>>=
# Note that display has to cover rownames as well (I set this to "s")
print(xtable(activist_directors, display=c("s", "s", "d", "d", "d", "d", "d")),
      include.rownames=FALSE, only.contents=TRUE,
      format.args = list(big.mark = ","))
@
\end{tabularx}
\end{table}
\end{landscape}
