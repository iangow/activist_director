%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%          Activist holding periods                %%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\Sexpr{set_parent('../activist_directors.Rnw')}
\Sexpr{opts_chunk$set(echo=FALSE, cache=TRUE, message=FALSE)}

<<holdings_updated, include=FALSE>>=
if(exists("holdings.updated")) opts_chunk$set(cache.extra=holdings.updated)
@


<<quantreg_libraries, cache=FALSE>>=
library(survival)
library(quantreg)
library(DBI)
library(dplyr, warn.conflicts = FALSE)
@

<<quantreg_data_step, include=FALSE, warning=FALSE>>=

pg <- dbConnect(RPostgres::Postgres())

rs <- dbExecute(pg, "SET work_mem = '5GB'")
rs <- dbExecute(pg, "SET search_path TO activist_director, public")

activist_holdings <- tbl(pg, "activist_holdings")

activist_exit <-
    activist_holdings %>%
    group_by(activist_name, permno, entry_date) %>%
    summarize(exit = bool_or(exit)) %>%
    compute()

survival_data <-
    activist_holdings %>%
    select(-exit) %>%
    inner_join(activist_exit, by = c("activist_name", "permno", "entry_date")) %>%
    filter(!is.na(permno), activism, quarter>0,
           !activist_name %in% c("California State Teachers Retirement System",
                                 "New York State Common Retirement Fund",
                                 "Ontario Teachers' Pension Plan Board",
                                 "The California Public Employees Retirement System")) %>%
    select(activist_name, permno, exit, entry_date, eff_announce_date,
           first_appointment_date, exit_date, affiliated) %>%
    distinct() %>%
    collect() %>%
    as.data.frame()

rs <- dbDisconnect(pg)
@

<<quantreg_analysis, dependson="quantreg_data_step", include=FALSE>>=
# data ready
surv <- with(survival_data,
             Surv(as.numeric(exit_date - entry_date), exit, type='right'))

#### Exit since Entry
quantreg1 <- crq(Surv(as.numeric(exit_date - entry_date), exit, type='right') ~ affiliated,
                 taus=c(0.25, 0.5, 0.75),
                 data=survival_data,
                 na.action="na.omit",
                 method="Portnoy")
summary1 <- summary.crq(quantreg1, taus=c(0.25, 0.5, 0.75))

#### Exit since Announcement
quantreg2 <- crq(Surv(as.numeric(exit_date - eff_announce_date), exit, type='right') ~ affiliated,
                 taus=c(0.25, 0.5, 0.75),
                 data=survival_data,
                 na.action="na.omit",
                 method="Portnoy")
summary2 <- summary.crq(quantreg2, taus=c(0.25, 0.5, 0.75))

#### Exit since Appointment
quantreg3 <- crq(Surv(as.numeric(exit_date - first_appointment_date), exit, type='right') ~ affiliated - 1,
                 data=subset(survival_data, !is.na(first_appointment_date)),
                 taus=c(0.25, 0.5, 0.75),
                 na.action="na.omit",
                 method="Portnoy")
summary3 <- summary.crq(quantreg3, taus=c(0.25, 0.5, 0.75))
@

<<make_panels, dependson="quantreg_analysis", include=FALSE>>=
getCoefs <- function(model) {

    makeRow <- function(i) {

        # Get the coefficients and SEs, calculate p-values
        coef <- model[[2]][["coefficients"]][i, 1]
        se   <- model[[2]][["coefficients"]][i, 4]
        p    <- 1-pnorm(abs(coef/se))

        # Standard stars
        stars <- ifelse(p < 0.01, "^{***}",
                        ifelse(p < 0.05, "^{**}",
                               ifelse(p < 0.1, "^{*}", " ")))

        # Add stars to coefficients, put parentheses around SEs
        return(rbind(coef=paste0(formatC(coef, digits = 3, format="f"), stars),
                     se=paste0("(",formatC(se, digits = 3, format="f"),")")))
    }

    # We have three coefficients we want to combine into a column and return
    return(do.call("rbind", lapply(1:3, makeRow)))
}

getCoefs2 <- function(model) {

    makeRow <- function(i) {

        # Get the coefficients and SEs, calculate p-values
        coef <- model[[2]][["coefficients"]][i, 1]
        se   <- model[[2]][["coefficients"]][i, 4]
        p    <- 1-pnorm(abs(coef/se))

        # Standard stars
        stars <- ifelse(p < 0.01, "^{***}",
                        ifelse(p < 0.05, "^{**}",
                               ifelse(p < 0.1, "^{*}", " ")))

        # Add stars to coefficients, put parentheses around SEs
        return(rbind(coef=paste0(formatC(coef, digits = 3, format="f"), stars),
                     se=paste0("(",formatC(se, digits = 3, format="f"),")")))
    }

    # We have three coefficients we want to combine into a column and return
    return(do.call("rbind", lapply(1:2, makeRow)))
}

# Get coefficients for each column
col1 <- getCoefs(summary1)
col2 <- getCoefs(summary2)
col3 <- getCoefs2(summary3)
col3 <- rbind("","",col3)

# Combine columns into a table
panel1 <- cbind(col1, col2, col3)

# Names must be distinct, so spaces are a kluge to get this to work
row.names(panel1) <- c("Intercept", "", "Affiliated director", " ", "Unaffiliated director", "  ")
colnames(panel1) <- c("\\textrm{Entry--exit}", "\\textrm{Annc--exit}", "\\textrm{Appt--exit}")

# Make a second panel with statistics for estimated holding periods for
# Activist director cases
col1 <- rbind(summary1[[2]]$coefficients[1,1],
              summary1[[2]]$coefficients[1,1]+summary1[[2]]$coefficients[2,1],
              summary1[[2]]$coefficients[1,1]+summary1[[2]]$coefficients[3,1])
col2 <- rbind(summary2[[2]]$coefficients[1,1],
              summary2[[2]]$coefficients[1,1]+summary2[[2]]$coefficients[2,1],
              summary2[[2]]$coefficients[1,1]+summary2[[2]]$coefficients[3,1])
col3 <- rbind(summary3[[2]]$coefficients[1,1], summary3[[2]]$coefficients[2,1])
col3 <- rbind(NA, col3)
panel2 <- cbind(col1, col2, col3)
colnames(panel2) <- c("\\textrm{Entry--exit}", "\\textrm{Annc--exit}", "\\textrm{Appt--exit}")
row.names(panel2) <- c("Other activism", "Affiliated director", "Unaffiliated director")
@
\begin{table}[htb]
  \caption{Activist holding periods}
   \label{tbl:holdings}
  \begin{minipage}[t]{\linewidth}
%  \begin{flushleft}
\tabularnewline
Table presents results of censored median regression analysis of holding period (days) on activism category.
\textit{Entry--exit} refers to the time (in days) between the record date of the first filing by the activist where the target stock is listed in the activist's portfolio through to the record date of the first filing where it is not (exit date)
\textit{Annc--exit} refers to the time between announcement of activism and the exit date.
\textit{Appt--exit} refers to the time between the first activist director appointment and the exit date.
\newline
% \end{flushleft}
\end{minipage}
% Following was copied from .tex output from stargazer.
\begin{tabular}{@{\extracolsep{1pt}}lD{.}{.}{-3} D{.}{.}{-3} D{.}{.}{-3} c }

\multicolumn{2}{l}{Regression coefficients} \\
\hline
<<survival_panel1, dependson="make_panels", results='asis'>>=
# Output the table
library(xtable)
print(xtable(panel1,
             display=c("s", rep("f",(dim(panel1)[2])))),
      include.rownames=TRUE,  include.colnames=TRUE, only.contents=TRUE,
      size="small", type="latex", sanitize.text.function=function(x){x},
      format.args = list(big.mark = ","))
@
\\
\multicolumn{2}{l}{Implied median holding periods (days)} \\
\hline
\\
<<survival_panel2, dependson="make_panels", results='asis'>>=
# Output the table
library(xtable)
print(xtable(panel2,
             display=c("s", rep("f",(dim(panel2)[2]))),
             digits = 0),
      include.rownames=TRUE,  include.colnames=TRUE, only.contents=TRUE,
      size="small", type="latex", sanitize.text.function=function(x){x},
      format.args = list(big.mark = ","),
      NA.string = "")
@
\end{tabular}
\end{table}
\clearpage
