\Sexpr{set_parent('../activist_directors.Rnw')}
\Sexpr{opts_chunk$set(cache=TRUE, warning=FALSE, echo=FALSE, message=FALSE)}

<<selection_libraries, cache=FALSE, include=FALSE>>=
require(stargazer)
library(DBI)
library(dplyr, warn.conflicts = FALSE)
library(xtable)
@

<<selection_functions, include=FALSE>>=
# Functions to extract fitted models, etc. from list of lists
# constructed by fit.model function below.
source("https://raw.githubusercontent.com/iangow/acct_data/master/code/cluster2.R")

getFitted <- function(list) {
    temp <- list()
    for (i in 1:length(list)) {
        temp[[i]] <- list[[i]][[1]]
    }
    return(temp)
}

# Get standard errors
getSEs <- function(a.list) {
    temp <- list()
    for (i in 1:length(a.list)) {
        temp[[i]] <- a.list[[i]][[2]][,2]
    }
    return(temp)
}

# Get p-values
getPs <- function(a.list) {
    temp <- list()
    for (i in 1:length(a.list)) {
        temp[[i]] <- a.list[[i]][[2]][,4]
    }
    return(temp)
}

# Get pseudo-R2s
getPseudoR2s <- function(a.list) {
    temp <- list()
    for (i in 1:length(a.list)) {
        temp[[i]] <- formatC(a.list[[i]][[3]], digits = 3, format = "f")
    }
    return(unlist(temp))
}

combineVars <- function(vars) {
    paste(unlist(strsplit(vars, "\\s+")), collapse=" + ")
}

fit.model <- function(data, lhs, rhs, cluster1) {
    model <- paste0(lhs, " ~ ", combineVars(rhs))
    fitted <- glm(model, data=data, na.action="na.exclude", family="binomial")
    fitted_constant <- glm(paste(lhs, "~ 1"), data=reg.data, na.action="na.exclude",
                           family="binomial")
    pseudoR2 <- 1- logLik(fitted)[[1]]/logLik(fitted_constant)[[1]]
    fitted.cluster <- coeftest.cluster(data, fitted, cluster1=cluster1)
    return(list(fitted, fitted.cluster, pseudoR2))
}
@

<<selection_data, include=FALSE>>=
# PostgreSQL Connection
pg <- dbConnect(RPostgres::Postgres(), bigint = "integer")

rs <- dbExecute(pg, "SET search_path TO activist_director")
rs <- dbExecute(pg, "SET work_mem='3GB'")

outcome_controls <- tbl(pg, "outcome_controls")
activism_events <- tbl(pg, "activism_events")
activist_demands <- tbl(pg, "demands")
activist_director_skills <- tbl(pg, "activist_director_skills")

link_table <-
  activism_events %>%
  select(campaign_ids) %>%
  mutate(campaign_id = unnest(campaign_ids)) %>%
  distinct() %>%
  compute()

skills <-
  activist_director_skills %>%
  inner_join(link_table, by = "campaign_id") %>%
  select(-skillset_bio, -last_name, -first_name, -campaign_id, -num_skills) %>%
  group_by(campaign_ids) %>%
  summarize(across(-campaign_ids, bool_or)) %>%
  compute()

min_date <-
    outcome_controls %>%
    summarise(min(eff_announce_date, na.rm = TRUE)) %>%
    pull()

min_date_sql <- sql(paste0("'", min_date, "'::date - interval '1 year'"))

prob_activist_director <-
    outcome_controls %>%
    mutate(category = coalesce(category, "_none"),
           activism = coalesce(activism, FALSE),
           activist_demand = coalesce(activist_demand, FALSE),
           activist_director = coalesce(activist_director, FALSE),
           affiliated_director = coalesce(num_affiliate_directors > 0, FALSE),
           analyst = coalesce(analyst, 0),
           inst = coalesce(inst, 0)) %>%
    filter(datadate >= min_date_sql) %>%
    collect()

prob_activist_demands <-
  outcome_controls %>%
  left_join(activist_demands) %>%
  mutate(category = coalesce(category, "_none"),
       activism = coalesce(activism, FALSE),
       activist_demand = coalesce(activist_demand, FALSE),
       activist_director = coalesce(activist_director, FALSE),
       affiliated_director = coalesce(num_affiliate_directors > 0, FALSE),
       analyst = coalesce(analyst, 0),
       inst = coalesce(inst, 0)) %>%
  filter(datadate >= min_date_sql) %>%
  collect()

prob_activist_director_skills <-
    activist_demands %>%
    left_join(skills, by = "campaign_ids") %>%
    distinct() %>%
    collect()

rs <- dbDisconnect(pg)

win01 <- function(x) psych::winsor(x, trim=0.01)

win_vars <- vars(bv, mv, btm, size_return, size_return_m1, leverage,
                 capex, dividend, roa, sale_growth, analyst, inst)

# Update Data - Winsorization
prob_activist_director <-
    prob_activist_director %>%
    mutate_at(win_vars, win01) %>%
    mutate_at(c("year", "sic2"), as.factor)

prob_activist_demands <-
    prob_activist_demands %>%
    mutate_at(win_vars, win01) %>%
    mutate_at(c("year", "sic2"), as.factor)
@

\begin{table}[htb]
\caption{Activist target selection}
\label{tbl:selection}
\begin{minipage}[t]{\columnwidth}
% \begin{flushleft}
  {\small
    All regressions in this table include industry and year fixed effects and the following controls measured for the prior fiscal year-end:
    \textit{Analyst}, the number of analyst forecasts for each firm-year (I/B/E/S);
    \textit{Institutional}, the proportion of the firms outstanding stock held by institutions;
    \textit{Size-adj. return}, twelve-month size-adjusted returns calculated as raw
            return over a year minus return for the size-matched decile provided by CRSP;
    \textit{Market value}, the value of market capitalization;
    \textit{Book-to-market}, market capitalization divided by the book value of common equity;
    \textit{Leverage}, sum of long-term debt and current liabilities divided by sum of
            long-term debt, current liabilities and the book value of common equity;
    \textit{Payout} the ratio of the sum of dividends and repurchases divided to EBITDA);
    \textit{ROA}, EBITDA divided by the lagged total assets;
    \textit{Sales growth}, Sales divided by lagged sales;
    \textit{Num. directors}, the number of directors on the board;
    \textit{Outside percent}, the percentage of outside directors;
    \textit{Age}, the average age of directors on the board;
    \textit{Tenure}, the average years of directorship on the board;
    \textit{Staggered board}, indicator for staggered board.
    All controls are winsorized at the $1\%$ and $99\%$ levels.
    Values in parentheses are standard errors clustered by firm.
    *** (**, *) indicates significance at the 1\% (5\%, 10\%) level.
}
 % \end{flushleft}
  \end{minipage}
\addtocounter{table}{-1}
\end{table}

  \begin{table}[htb]
    \caption{Activist target selection}
        \begin{minipage}[t]{\columnwidth}
%    \begin{flushleft}
  {\small
Table presents logit regression where the dependent variables are indicators for activist demanding board seats (\textit{Board demand}, Column 1), activists getting board seats (\textit{Activist director}, Column 2), activist directors not affiliated with getting board seats (\textit{Unaffiliated director}, Column 3), and activist-affiliated directors getting board seats (\textit{Affiliated director}, Column 4), conditional on the firm being targeted by activists. Sample includes firm-years with activism only.
  \newline}
%  \end{flushleft}
  \end{minipage}
    \begin{tabularx}{6.5in}{l*{3}{Y}}
     % \multicolumn{3}{l}\\ {Panel B: Activism, board demand and activist director (activism only)} \\
<<Table_3_panelA2, dependson=c("selection_functions", "selection_data"), results='asis'>>=
# Panel B
# Subset on activism
rhs.1 <- "analyst inst size_return mv btm leverage dividend roa sale_growth
          num_directors outside_percent age tenure staggered_board sic2 year"

reg.data <-
    prob_activist_director %>%
    filter(activism) %>%
    mutate(unaffiliated_director = affiliated == "unaffiliated")

t3.pb <- list()
t3.pb[[1]] <- fit.model(data=subset(reg.data, activism),
                  lhs="activist_demand", rhs=rhs.1, cluster1="permno")
t3.pb[[2]] <- fit.model(data=subset(reg.data, activism),
                  lhs="activist_director", rhs=rhs.1, cluster1="permno")
t3.pb[[3]] <- fit.model(data=subset(reg.data, activism),
                  lhs="unaffiliated_director", rhs=rhs.1, cluster1="permno")
t3.pb[[4]] <- fit.model(data=subset(reg.data, activism),
                  lhs="affiliated_director", rhs=rhs.1, cluster1="permno")

stargazer(getFitted(t3.pb),
        dep.var.labels = c("Board demand",
                           "Activist director",
                           "Unaffiliated director",
                           "Affiliated director"),
        covariate.labels = c("Analyst", "Inst", "Size-adj. ret", "Market value", "Book-to-market",
                             "Leverage", "Payout", "ROA", "Sales growth", "Num. directors",
                             "Outside percent", "Age", "Tenure", "Staggered board"),
        se=getSEs(t3.pb),
        p=getPs(t3.pb),
        omit=c("^sic", "^year", "^Constant"),
       float=FALSE, align=TRUE, font.size="small",
       keep.stat=c("n"), no.space=TRUE,
       add.lines=list(c("Sample", "\\textrm{Activism}", "\\textrm{Activism}",
                        "\\textrm{Activism}",  "\\textrm{Activism}", "\\textrm{Activism}"),
                      c("Pseudo-$R^2$", getPseudoR2s(t3.pb))))
rm(t3.pb)
@
\end{tabularx}
\end{table}

\newpage

  \begin{table}[htb]
    \caption{Activist demands and target selection}
    \label{tbl:demand}
        \begin{minipage}[t]{\columnwidth}
  {\small
Panel A presents the types of demand activists have made for 1,689 events (source: FactSet SharkWatch). Multiple demands can be made for each activism event. Demand over Success reports the probability of activist demand being met by the boards successfully.
  \newline}
%  \end{flushleft}
  \end{minipage}
    \begin{tabularx}{5in}{l*{3}{Y}}
     \multicolumn{3}{l}{Panel A: Activist demands and success rates} \\
<<Table_3_demand, dependson=c("selection_functions", "selection_data"), results='asis'>>=
# Panel A
# Subset on activism
reg.data <-
    prob_activist_demands %>%
    filter(activism) %>%
    mutate(unaffiliated_director = affiliated == "unaffiliated") %>%
    as.data.frame()

demand_summ <- reg.data %>%
    summarise(
              board_seat_demand = sum(board_seat_demand, na.rm=TRUE),
              merger_demand = sum(merger_demand, na.rm=TRUE),
      strategy_demand = sum(strategy_demand, na.rm=TRUE),
              payout_demand = sum(payout_demand, na.rm=TRUE),
              other_gov_demand = sum(other_gov_demand, na.rm=TRUE),
              divestiture_demand = sum(divestiture_demand, na.rm=TRUE),
              compensation_demand = sum(compensation_demand, na.rm=TRUE),
              block_merger_demand = sum(block_merger_demand, na.rm=TRUE),
              remove_defense_demand = sum(remove_defense_demand, na.rm=TRUE),
              acquisition_demand = sum(acquisition_demand, na.rm=TRUE),
              leverage_demand = sum(leverage_demand, na.rm=TRUE),
              add_indep_demand = sum(add_indep_demand, na.rm=TRUE),
              remove_director_demand = sum(remove_director_demand, na.rm=TRUE),
              remove_officer_demand = sum(remove_officer_demand, na.rm=TRUE),
              esg_demand = sum(esg_demand, na.rm=TRUE),
              block_acquisition_demand = sum(block_acquisition_demand, na.rm=TRUE),
              reits_demand = sum(reits_demand, na.rm=TRUE))

demand_summ[2,] <- reg.data %>%
    summarise(
              board_seat_outcome = sum(board_seat_outcome, na.rm=TRUE),
              merger_outcome = sum(merger_outcome, na.rm=TRUE),
      strategy_outcome = sum(strategy_outcome, na.rm=TRUE),
              payout_outcome = sum(payout_outcome, na.rm=TRUE),
              other_gov_outcome = sum(other_gov_outcome, na.rm=TRUE),
              divestiture_outcome = sum(divestiture_outcome, na.rm=TRUE),
              compensation_outcome = sum(compensation_outcome, na.rm=TRUE),
              block_merger_outcome = sum(block_merger_outcome, na.rm=TRUE),
              remove_defense_outcome = sum(remove_defense_outcome, na.rm=TRUE),
              acquisition_outcome = sum(acquisition_outcome, na.rm=TRUE),
              leverage_outcome = sum(leverage_outcome, na.rm=TRUE),
              add_indep_outcome = sum(add_indep_outcome, na.rm=TRUE),
              remove_director_outcome = sum(remove_director_outcome, na.rm=TRUE),
              remove_officer_outcome = sum(remove_officer_outcome, na.rm=TRUE),
              esg_outcome = sum(esg_outcome, na.rm=TRUE),
              block_acquisition_outcome = sum(block_acquisition_outcome, na.rm=TRUE),
              reits_outcome = sum(reits_outcome, na.rm=TRUE))

demand_summ[3,] <- demand_summ[2,]/demand_summ[1,]
demand_summ <- t(demand_summ) %>% as.data.frame()
colnames(demand_summ) <- c("Demand", "Success", "Success rate")
rownames(demand_summ) <- c( "Board seat", "Merger", "Strategy", "Payout",
                            "Other gov.", "Divestiture", "Compensation",
                            "Block merger", "Remove defense", "Acquisition",
                            "Leverage", "Add ind. dir.", "Remove director",
                            "Remove officer", "ESG", "Block acquisition", "REITs")
print(xtable(demand_summ, display=c("s", "d", "d", "f")),
      include.rownames=TRUE, only.contents=TRUE,
      format.args = list(big.mark = ","))
@
\end{tabularx}
\addtocounter{table}{-1}
\end{table}

\newpage

  \begin{table}[htb]
    \caption{Activist demands and target selection}
        \begin{minipage}[t]{\columnwidth}
  {\small
Panel B presents logit regression where the dependent variables are indicators for activist demanding board seats (\textit{Board demand}, Column 1), activists getting board seats (\textit{Activist director}, Column 2), and activist-affiliated and unaffiliated directors getting board seats (\textit{Affiliated director}, Column 3, \textit{Unaffiliated director}, Column 4), conditional on the firm being targeted by activists. The control variables from Table 7 are included in all analyses. Sample includes firm-years with activism.
  \newline}
%  \end{flushleft}
  \end{minipage}
    \begin{tabularx}{5in}{l*{3}{Y}}
     \multicolumn{3}{l}{Panel B: Activism, activist demands, and activist directors} \\
<<Table_3_panelA3, dependson=c("selection_functions", "selection_data"), results='asis'>>=
# Panel C
# Subset on activism
reg.data <-
    prob_activist_demands %>%
    filter(activism) %>%
    mutate(unaffiliated_director = affiliated == "unaffiliated") %>%
    as.data.frame()

rhs.2 <- "analyst inst size_return mv btm leverage dividend roa sale_growth
          num_directors outside_percent age tenure staggered_board sic2 year
          strategy_demand merger_demand
          block_merger_demand acquisition_demand
          block_acquisition_demand divestiture_demand
          payout_demand leverage_demand
          reits_demand esg_demand
          remove_director_demand
          remove_officer_demand remove_defense_demand
          compensation_demand other_gov_demand"

t3.pc <- list()
t3.pc[[1]] <- fit.model(data=subset(reg.data, activism),
                  lhs="activist_demand", rhs=rhs.2, cluster1="permno")
t3.pc[[2]] <- fit.model(data=subset(reg.data, activism),
                  lhs="activist_director", rhs=rhs.2, cluster1="permno")
t3.pc[[3]] <- fit.model(data=subset(reg.data, activism),
                  lhs="unaffiliated_director", rhs=rhs.2, cluster1="permno")
t3.pc[[4]] <- fit.model(data=subset(reg.data, activism),
                  lhs="affiliated_director", rhs=rhs.2, cluster1="permno")

stargazer(getFitted(t3.pc),
        dep.var.labels = c("Board demand",
                           "Activist director",
                           "Unaffiliated",
                           "Affiliated"),
        keep=c("strategy_demand", "merger_demand",
          "block_merger_demand", "acquisition_demand",
          "block_acquisition_demand", "divestiture_demand",
          "payout_demand", "leverage_demand",
          "reits_demand",
          "remove_director_demand",
          "remove_officer_demand", "remove_defense_demand",
          "compensation_demand", "other_gov_demand"),
        covariate.labels = c("Strategy", "Merger",
                             "Block merger", "Acquisition",
                             "Block acquisition",
                             "Divestiture",
                             "Payout", "Leverage",
                             "REITs",
                             "Remove director",
                             "Remove officer",
                             "Remove defense",
                             "Compensation", "Other gov"),
        se=getSEs(t3.pc),
        p=getPs(t3.pc),
       float=FALSE, align=TRUE, font.size="small",
       keep.stat=c("n"), no.space=TRUE,
       add.lines=list(
         c("Sample", "\\textrm{Activism}", "\\textrm{Activism}",
                        "\\textrm{Activism}",  "\\textrm{Activism}"),
                      c("Controls", "\\textrm{Yes}", "\\textrm{Yes}",
                      "\\textrm{Yes}", "\\textrm{Yes}")),
                      c("Pseudo-$R^2$", getPseudoR2s(t3.pc)))
rm(t3.pc)
@
\end{tabularx}
% \addtocounter{table}{-1}
\end{table}

% \newpage
%   \begin{table}[htb]
%     \caption{Activist target selection}
%         \begin{minipage}[t]{\columnwidth}
%   {\small
% Panel D presents logit regression where the dependent variables are indicators for activist director skill of finance and accounting (\textit{Finance accounting}, Column 1), management (\textit{Management}, Column 2), company business (\textit{Company business}, Column 3), and legal (\textit{Legal}, Column 4). The control variables from Panel B are included in all analyses. Sample includes firm-years with activist directors.
%   \newline}
% %  \end{flushleft}
%   \end{minipage}
%     \begin{tabularx}{5in}{l*{3}{Y}}
%      \multicolumn{3}{l}{Panel D: Activist demands and activist director skills} \\
% <<Table_3_panelA4, dependson=c("selection_functions", "selection_data"), results='asis'>>=
% # Panel D
% # Subset on activism
% reg.data <-
%     prob_activist_director %>%
%     filter(activist_director) %>%
%     select(-permno) %>%
%     inner_join(prob_activist_director_skills) %>%
%     collect()
%
% rhs.2 <- "analyst inst size_return mv btm leverage dividend roa sale_growth
%           num_directors outside_percent age tenure staggered_board sic2 year
%           strategy_demand merger_demand
%           block_merger_demand acquisition_demand
%           block_acquisition_demand divestiture_demand
%           payout_demand leverage_demand
%           reits_demand esg_demand
%           remove_director_demand
%           remove_officer_demand remove_defense_demand
%           compensation_demand other_gov_demand"
%
% t3.pd <- list()
% t3.pd[[1]] <- fit.model(data=reg.data,
%                   lhs="finance_accounting", rhs=rhs.2, cluster1="permno")
% t3.pd[[2]] <- fit.model(data=reg.data,
%                   lhs="management", rhs=rhs.2, cluster1="permno")
% t3.pd[[3]] <- fit.model(data=reg.data,
%                   lhs="company_business", rhs=rhs.2, cluster1="permno")
% t3.pd[[4]] <- fit.model(data=reg.data,
%                   lhs="legal", rhs=rhs.2, cluster1="permno")
%
% stargazer(getFitted(t3.pd),
%         dep.var.labels = c("Finance accounting",
%                            "Mangement",
%                            "Company business",
%                            "Legal"),
%         keep=c("strategy_demand", "merger_demand",
%                 "block_merger_demand", "acquisition_demand",
%                 "block_acquisition_demand", "divestiture_demand",
%                 "payout_demand", "leverage_demand",
%                 "reits_demand",
%                 "remove_director_demand",
%                 "remove_officer_demand", "remove_defense_demand",
%                 "compensation_demand", "other_gov_demand"),
%         covariate.labels = c("Strategy", "Merger",
%                              "Block merger", "Acquisition",
%                              "Block acquisition",
%                              "Divestiture",
%                              "Payout", "Leverage",
%                              "REITs",
%                              "Remove director",
%                              "Remove officer",
%                              "Remove defense",
%                              "Compensation", "Other gov"),
%         se=getSEs(t3.pd),
%         p=getPs(t3.pd),
%        float=FALSE, align=TRUE, font.size="small",
%        keep.stat=c("n"), no.space=TRUE,
%        add.lines=list(
%           c("Sample", "\\textrm{Activist}", "\\textrm{Activist}",
%                         "\\textrm{Activist}", "\\textrm{Activist}"),
%           c("", "\\textrm{Directors}", "\\textrm{Directors}",
%                 "\\textrm{Directors}", "\\textrm{Directors}"),
%           c("Controls", "\\textrm{Yes}", "\\textrm{Yes}",
%                         "\\textrm{Yes}", "\\textrm{Yes}")))
% rm(t3.pd)
% @
% \end{tabularx}
% \end{table}
