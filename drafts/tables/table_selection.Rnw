\Sexpr{set_parent('../activist_directors.Rnw')}
\Sexpr{opts_chunk$set(cache=FALSE, warning=FALSE, echo=FALSE, message=FALSE)}

<<selection_libraries, cache=FALSE, include=FALSE>>=
require(stargazer)
library(DBI)
library(dplyr, warn.conflicts = FALSE)
library(xtable)
library(tidyr)
@

<<selection_functions, include=FALSE>>=
# Functions to extract fitted models, etc. from list of lists
# constructed by fit.model function below.
source("https://raw.githubusercontent.com/iangow/acct_data/master/code/cluster2.R")

getFitted <- function(list) {
    temp <- list()
    for (i in 1:length(list)) {
        temp[[i]] <- list[[i]][[1]]
    }
    return(temp)
}

# Get standard errors
getSEs <- function(a.list) {
    temp <- list()
    for (i in 1:length(a.list)) {
        temp[[i]] <- a.list[[i]][[2]][,2]
    }
    return(temp)
}

# Get p-values
getPs <- function(a.list) {
    temp <- list()
    for (i in 1:length(a.list)) {
        temp[[i]] <- a.list[[i]][[2]][,4]
    }
    return(temp)
}

# Get pseudo-R2s
getPseudoR2s <- function(a.list) {
    temp <- list()
    for (i in 1:length(a.list)) {
        temp[[i]] <- formatC(a.list[[i]][[3]], digits = 3, format = "f")
    }
    return(unlist(temp))
}

combineVars <- function(vars) {
    paste(unlist(strsplit(vars, "\\s+")), collapse=" + ")
}

fit.model <- function(data, lhs, rhs, cluster1) {
    model <- paste0(lhs, " ~ ", combineVars(rhs))
    fitted <- glm(model, data=data, na.action="na.exclude", family="binomial")
    fitted_constant <- glm(paste(lhs, "~ 1"), data = reg.data,
                           na.action = "na.exclude",
                           family = "binomial")
    pseudoR2 <- 1- logLik(fitted)[[1]]/logLik(fitted_constant)[[1]]
    fitted.cluster <- coeftest.cluster(data, fitted, cluster1 = cluster1)
    # fitted.cluster <- sandwich::vcovCL(fitted, cluster1=cluster1)
    return(list(fitted, fitted.cluster, pseudoR2))
}
@

<<selection_data, include=FALSE>>=
# PostgreSQL Connection
pg <- dbConnect(RPostgres::Postgres(), bigint = "integer")

rs <- dbExecute(pg, "SET search_path TO activist_director")
rs <- dbExecute(pg, "SET work_mem='3GB'")

outcome_controls <- tbl(pg, "outcome_controls")
activism_events <- tbl(pg, "activism_events")
activist_demands <- tbl(pg, "demands")
activist_director_skills <- tbl(pg, "activist_director_skills")

link_table <-
  activism_events %>%
  select(campaign_ids) %>%
  mutate(campaign_id = unnest(campaign_ids)) %>%
  distinct() %>%
  compute()

skills <-
  activist_director_skills %>%
  inner_join(link_table, by = "campaign_id") %>%
  select(-skillset_bio, -last_name, -first_name, -campaign_id, -num_skills) %>%
  group_by(campaign_ids) %>%
  summarize(across(-campaign_ids, bool_or)) %>%
  compute()

min_date <-
    outcome_controls %>%
    summarise(min(eff_announce_date, na.rm = TRUE)) %>%
    pull()

min_date_sql <- sql(paste0("'", min_date, "'::date - interval '1 year'"))

prob_activist_director <-
    outcome_controls %>%
    mutate(category = coalesce(category, "_none"),
           activism = coalesce(activism, FALSE),
           activist_demand = coalesce(activist_demand, FALSE),
           activist_director = coalesce(activist_director, FALSE),
           affiliated_director = coalesce(num_affiliate_directors > 0, FALSE),
           analyst = coalesce(analyst, 0),
           inst = coalesce(inst, 0)) %>%
    filter(datadate >= min_date_sql) %>%
    collect()

prob_activist_demands <-
  outcome_controls %>%
  left_join(activist_demands, by = "campaign_ids") %>%
  mutate(category = coalesce(category, "_none"),
         across(c(activism, activist_demand, activist_director),
                ~ coalesce(., FALSE)),
         affiliated_director = coalesce(num_affiliate_directors > 0, FALSE),
         across(c(analyst, inst), ~ coalesce(., 0))) %>%
  filter(datadate >= min_date_sql) %>%
  collect()

prob_activist_director_skills <-
    activist_demands %>%
    left_join(skills, by = "campaign_ids") %>%
    distinct() %>%
    collect()

rs <- dbDisconnect(pg)

win01 <- function(x, prob = 0.01, p_low = prob, p_high = 1 - prob) {
  cuts <- quantile(x, probs = c(p_low, p_high), type = 2, na.rm = TRUE)
  x[x < cuts[1]] <- cuts[1]
  x[x > cuts[2]] <- cuts[2]
  x
}

win_vars <- c("bv", "mv", "btm", "size_return", "size_return_m1", "leverage",
                 "capex", "dividend", "roa", "sale_growth", "analyst", "inst")

# Update Data - Winsorization
prob_activist_director <-
    prob_activist_director %>%
    mutate(across(win_vars, win01)) %>%
    mutate_at(c("year", "sic2"), as.factor)

prob_activist_demands <-
    prob_activist_demands %>%
    mutate(across(win_vars, win01)) %>%
    mutate_at(c("year", "sic2"), as.factor)
@

  \begin{table}[htb]
    \caption{Activist target selection}
    \label{tbl:demand}
        \begin{minipage}[t]{\columnwidth}
  {\small
Table presents logit regressions where the dependent variables are indicators for activist demanding board seats (\textit{Board demand}, Column 1), activists getting board seats (\textit{Activist director}, Column 2), activist directors not affiliated with activist (\textit{Unaffiliated director}, Column 3), and activist-affiliated directors getting board seats (\textit{Affiliated director}, Column 4).
Sample includes firm-years with activism only.
All regressions include industry and year fixed effects and controls measured for the prior fiscal year-end (see Section \ref{sec:other_data} for definitions).
    All controls are winsorized at the $1\%$ and $99\%$ levels.
    Values in parentheses are standard errors clustered by firm.
  \newline}
  \end{minipage}
    \begin{tabularx}{6.5in}{l*{3}{Y}}
<<Table_3_panelA2, dependson=c("selection_functions", "selection_data"), results='asis'>>=
# Panel B
# Subset on activism
rhs.1 <- "analyst inst size_return mv btm leverage dividend roa sale_growth
          num_directors outside_percent age tenure staggered_board sic2 year"

reg.data <-
    prob_activist_director %>%
    filter(activism) %>%
    mutate(unaffiliated_director = affiliated == "unaffiliated")

t3.pb <- list()
t3.pb[[1]] <- fit.model(data=subset(reg.data, activism),
                  lhs="activist_demand", rhs=rhs.1, cluster1="permno")
t3.pb[[2]] <- fit.model(data=subset(reg.data, activism),
                  lhs="activist_director", rhs=rhs.1, cluster1="permno")
t3.pb[[3]] <- fit.model(data=subset(reg.data, activism),
                  lhs="unaffiliated_director", rhs=rhs.1, cluster1="permno")
t3.pb[[4]] <- fit.model(data=subset(reg.data, activism),
                  lhs="affiliated_director", rhs=rhs.1, cluster1="permno")

stargazer(getFitted(t3.pb),
        dep.var.labels = c("Board demand",
                           "Activist director",
                           "Unaffiliated director",
                           "Affiliated director"),
        covariate.labels = c("Analyst", "Institutional", "Size-adj. ret",
                             "Market value", "Book-to-market",
                             "Leverage", "Payout", "ROA", "Sales growth",
                             "Num. directors",
                             "Outside percent", "Age", "Tenure",
                             "Staggered board"),
        se=getSEs(t3.pb),
        p=getPs(t3.pb),
        omit=c("^sic", "^year", "^Constant"),
       float=FALSE, align=TRUE, font.size="small",
       keep.stat=c("n"), no.space=TRUE,
       add.lines=list(c("Sample", "\\textrm{Activism}", "\\textrm{Activism}",
                        "\\textrm{Activism}",  "\\textrm{Activism}", "\\textrm{Activism}"),
                      c("Pseudo-$R^2$", getPseudoR2s(t3.pb))))
rm(t3.pb)
@
\end{tabularx}
\end{table}

\newpage

  \begin{table}[htb]
    \caption{Activist demands and target selection}
        \begin{minipage}[t]{\columnwidth}
  {\small
Panel A presents the types of demand activists have made for 1,689 events (source: FactSet SharkWatch).
SharkWatch classifies types of demand for each activism event and indicate whether the demand followed through for success (e.g., \textit{Return Cash via Dividends/Buybacks(Yes)}, \textit{Return Cash via Dividends/Buybacks(No)}).
Multiple demands can be made for each activism event.
Demand over Success reports the probability of activist demand being met by the boards successfully.
  \newline}
%  \end{flushleft}
  \end{minipage}
    \begin{tabularx}{5in}{l*{3}{Y}}
     \multicolumn{3}{l}{Panel A: Activist demands and success rates} \\
<<Table_3_demand, dependson=c("selection_functions", "selection_data"), results='asis'>>=
# Panel A
# Subset on activism
reg.data <-
    prob_activist_demands %>%
    filter(activism) %>%
    mutate(unaffiliated_director = affiliated == "unaffiliated")

demand_summ <-
    reg.data %>%
    summarise(across(ends_with("_demand"),
                     ~ sum(., na.rm = TRUE))) %>%
    pivot_longer(everything(), names_to = "category",
                 values_to = "Demands") %>%
    mutate(category = gsub("_demand", "", category))

success_summ <-
    reg.data %>%
    summarise(across(ends_with("_outcome"),
                     ~ sum(., na.rm = TRUE))) %>%
    pivot_longer(everything(), names_to = "category",
                 values_to = "Successes") %>%
    mutate(category = gsub("_outcome", "", category))

demand_labels <- tribble(
  ~category, ~"Demand type", ~"Definition",
  "board_seat", "Board seat", "Board Seats (activist group)",
  "merger", "Merger", "Seek Sale or Merger or Liquidation",
  "strategy", "Strategy", "Review Strategic Alternatives",
  "payout", "Payout", "Return Cash via Dividends or Buybacks",
  "other_gov", "Other gov.", "Other Governance Enhancements",
  "divestiture", "Divestiture", "Breakup Company, Divest Assets or Divisions",
  "compensation", "Compensation", "Compensation Related Enhancements",
  "block_merger", "Block merger", "Block Merger or Agitate for Higher Price (Shareholder of Target)",
  "remove_defense", "Remove defense", "Remove Takeover Defenses",
  "acquisition", "Acquisition", "Potential Acquisition (Friendly and Unfriendly)",
  "leverage", "Leverage", "Other Capital Structure Related, Increase Leverage, etc.",
  "add_indep", "Add ind. dir.", "Add Independent Directors",
  "remove_director", "Remove director", "Remove Director(s)",
  "remove_officer", "Remove officer", "Remove Officer(s)",
  "esg", "ESG", "Social or Environmental or Political Issues",
  "block_acquisition", "Block acquisition", "Block Acquisition or Agitate for Lower Price (Shareholder of Acquirer)",
  "reits", "REITs", "Separate Real Estate or Create REIT")

demand_labels %>%
  inner_join(demand_summ) %>%
  inner_join(success_summ) %>%
  mutate("Success rate (%)" = Successes/Demands*100) %>%
  select(-category) %>%
  xtable(display=c("s", "s", "s", "d", "d", "f")) %>%
  print(include.rownames = FALSE, only.contents = TRUE,
        format.args = list(big.mark = ","))
@
\end{tabularx}
\addtocounter{table}{-1}
\end{table}

\newpage

  \begin{table}[htb]
    \caption{Activist demands and target selection}
        \begin{minipage}[t]{\columnwidth}
  {\small
Panel B presents logit regression where the dependent variables are indicators for activist demanding board seats (\textit{Board demand}, Column 1), activists getting board seats (\textit{Activist director}, Column 2), and activist-affiliated and unaffiliated directors getting board seats (\textit{Affiliated director}, Column 3, \textit{Unaffiliated director}, Column 4), conditional on the firm being targeted by activists.
The control variables from Table \ref{tbl:demand} are included in all analyses.
Sample includes firm-years with activism.
  \newline}
%  \end{flushleft}
  \end{minipage}
    \begin{tabularx}{5in}{l*{3}{Y}}
     \multicolumn{3}{l}{Panel B: Activism, activist demands, and activist directors} \\
<<Table_3_panelA3, dependson=c("selection_functions", "selection_data"), results='asis'>>=
# Panel C
# Subset on activism
reg.data <-
    prob_activist_demands %>%
    filter(activism) %>%
    mutate(unaffiliated_director = affiliated == "unaffiliated") %>%
    filter(strategy_demand | merger_demand |
          block_merger_demand | acquisition_demand |
          block_acquisition_demand | divestiture_demand |
          payout_demand | leverage_demand |
          reits_demand | esg_demand |
          remove_director_demand |
          remove_officer_demand | remove_defense_demand |
          compensation_demand | other_gov_demand)

rhs.2 <- "analyst inst size_return mv btm leverage dividend roa sale_growth
          num_directors outside_percent age tenure staggered_board sic2 year
          strategy_demand merger_demand
          block_merger_demand acquisition_demand
          block_acquisition_demand divestiture_demand
          payout_demand leverage_demand
          reits_demand esg_demand
          remove_director_demand
          remove_officer_demand remove_defense_demand
          compensation_demand other_gov_demand"

t3.pc <- list()
t3.pc[[1]] <- fit.model(data=subset(reg.data, activism),
                  lhs="activist_demand", rhs=rhs.2, cluster1="permno")
t3.pc[[2]] <- fit.model(data=subset(reg.data, activism),
                  lhs="activist_director", rhs=rhs.2, cluster1="permno")
t3.pc[[3]] <- fit.model(data=subset(reg.data, activism),
                  lhs="unaffiliated_director", rhs=rhs.2, cluster1="permno")
t3.pc[[4]] <- fit.model(data=subset(reg.data, activism),
                  lhs="affiliated_director", rhs=rhs.2, cluster1="permno")

stargazer(getFitted(t3.pc),
        dep.var.labels = c("Board demand",
                           "Activist director",
                           "Unaffiliated",
                           "Affiliated"),
        keep=c("strategy_demand", "merger_demand",
          "block_merger_demand", "acquisition_demand",
          "block_acquisition_demand", "divestiture_demand",
          "payout_demand", "leverage_demand",
          "reits_demand",
          "remove_director_demand",
          "remove_officer_demand", "remove_defense_demand",
          "compensation_demand", "other_gov_demand"),
        covariate.labels = c("Strategy",
                             "Merger",
                             "Block merger",
                             "Acquisition",
                             "Block acquisition",
                             "Divestiture",
                             "Payout",
                             "Leverage",
                             "REITs",
                             "Remove director",
                             "Remove officer",
                             "Remove defense",
                             "Compensation",
                             "Other gov"),
        se=getSEs(t3.pc),
        p=getPs(t3.pc),
       float=FALSE, align=TRUE, font.size="small",
       keep.stat=c("n"), no.space=TRUE,
       add.lines=list(
         c("Sample", "\\textrm{Activism}", "\\textrm{Activism}",
                        "\\textrm{Activism}",  "\\textrm{Activism}"),
                      c("Controls", "\\textrm{Yes}", "\\textrm{Yes}",
                      "\\textrm{Yes}", "\\textrm{Yes}")),
                      c("Pseudo-$R^2$", getPseudoR2s(t3.pc)))
rm(t3.pc)
@
\end{tabularx}
\end{table}

